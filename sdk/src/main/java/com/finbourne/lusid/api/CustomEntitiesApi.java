/*
 * LUSID API
 * # Introduction  This page documents the [LUSID APIs](https://www.lusid.com/api/swagger), which allows authorised clients to query and update their data within the LUSID platform.  SDKs to interact with the LUSID APIs are available in the following languages and frameworks:  * [C#](https://github.com/finbourne/lusid-sdk-csharp) * [Java](https://github.com/finbourne/lusid-sdk-java) * [JavaScript](https://github.com/finbourne/lusid-sdk-js) * [Python](https://github.com/finbourne/lusid-sdk-python) * [Angular](https://github.com/finbourne/lusid-sdk-angular)  The LUSID platform is made up of a number of sub-applications. You can find the API / swagger documentation by following the links in the table below.   | Application | Description | API / Swagger Documentation | | ----- | ----- | ---- | | LUSID | Open, API-first, developer-friendly investment data platform. | [Swagger](https://www.lusid.com/api/swagger/index.html) | | Web app | User-facing front end for LUSID. | [Swagger](https://www.lusid.com/app/swagger/index.html) | | Scheduler | Automated job scheduler. | [Swagger](https://www.lusid.com/scheduler2/swagger/index.html) | | Insights |Monitoring and troubleshooting service. | [Swagger](https://www.lusid.com/insights/swagger/index.html) | | Identity | Identity management for LUSID (in conjuction with Access) | [Swagger](https://www.lusid.com/identity/swagger/index.html) | | Access | Access control for LUSID (in conjunction with Identity) | [Swagger](https://www.lusid.com/access/swagger/index.html) | | Drive | Secure file repository and manager for collaboration. | [Swagger](https://www.lusid.com/drive/swagger/index.html) | | Luminesce | Data virtualisation service (query data from multiple providers, including LUSID) | [Swagger](https://www.lusid.com/honeycomb/swagger/index.html) | | Notification | Notification service. | [Swagger](https://www.lusid.com/notifications/swagger/index.html) | | Configuration | File store for secrets and other sensitive information. | [Swagger](https://www.lusid.com/configuration/swagger/index.html) | 
 *
 * The version of the OpenAPI document: 0.11.3490
 * Contact: info@finbourne.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.finbourne.lusid.api;

import com.finbourne.lusid.ApiCallback;
import com.finbourne.lusid.ApiClient;
import com.finbourne.lusid.ApiException;
import com.finbourne.lusid.ApiResponse;
import com.finbourne.lusid.Configuration;
import com.finbourne.lusid.Pair;
import com.finbourne.lusid.ProgressRequestBody;
import com.finbourne.lusid.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import com.finbourne.lusid.model.CustomEntityRequest;
import com.finbourne.lusid.model.CustomEntityResponse;
import com.finbourne.lusid.model.LusidProblemDetails;
import com.finbourne.lusid.model.LusidValidationProblemDetails;
import java.time.OffsetDateTime;
import com.finbourne.lusid.model.PagedResourceListOfCustomEntityResponse;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class CustomEntitiesApi {
    private ApiClient localVarApiClient;
    public CustomEntitiesApi() {
        this(Configuration.getDefaultApiClient());
    }

    public CustomEntitiesApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    /**
     * Build call for getCustomEntity
     * @param entityType The type of entity to retrieve. This is included in the response from M:Finbourne.WebApi.Controllers.CustomEntityDefinitionController.CreateCustomEntityDefinition(Finbourne.WebApi.Interface.Dto.CustomEntityDefinitions.CustomEntityDefinitionRequest). (required)
     * @param identifierType An identifier type attached to the CustomEntity. (required)
     * @param identifierValue The identifier value. (required)
     * @param identifierScope The identifier scope. (required)
     * @param asAt The AsAt at which to retrieve the CustomEntity. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The requested Custom Entity </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> The details of the input related failure </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getCustomEntityCall(String entityType, String identifierType, String identifierValue, String identifierScope, OffsetDateTime asAt, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/customentities/{entityType}/{identifierType}/{identifierValue}"
            .replaceAll("\\{" + "entityType" + "\\}", localVarApiClient.escapeString(entityType.toString()))
            .replaceAll("\\{" + "identifierType" + "\\}", localVarApiClient.escapeString(identifierType.toString()))
            .replaceAll("\\{" + "identifierValue" + "\\}", localVarApiClient.escapeString(identifierValue.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (identifierScope != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("identifierScope", identifierScope));
        }

        if (asAt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("asAt", asAt));
        }

        final String[] localVarAccepts = {
            "text/plain", "application/json", "text/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);
        localVarHeaderParams.put("X-LUSID-SDK-Language", "Java");
        localVarHeaderParams.put("X-LUSID-SDK-Version", "0.11.3490");

        String[] localVarAuthNames = new String[] { "oauth2" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getCustomEntityValidateBeforeCall(String entityType, String identifierType, String identifierValue, String identifierScope, OffsetDateTime asAt, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'entityType' is set
        if (entityType == null) {
            throw new ApiException("Missing the required parameter 'entityType' when calling getCustomEntity(Async)");
        }
        
        // verify the required parameter 'identifierType' is set
        if (identifierType == null) {
            throw new ApiException("Missing the required parameter 'identifierType' when calling getCustomEntity(Async)");
        }
        
        // verify the required parameter 'identifierValue' is set
        if (identifierValue == null) {
            throw new ApiException("Missing the required parameter 'identifierValue' when calling getCustomEntity(Async)");
        }
        
        // verify the required parameter 'identifierScope' is set
        if (identifierScope == null) {
            throw new ApiException("Missing the required parameter 'identifierScope' when calling getCustomEntity(Async)");
        }
        

        okhttp3.Call localVarCall = getCustomEntityCall(entityType, identifierType, identifierValue, identifierScope, asAt, _callback);
        return localVarCall;

    }

    /**
     * [EXPERIMENTAL] Get CustomEntity
     * Retrieve a CustomEntity by a specific Id at a point in AsAt time.
     * @param entityType The type of entity to retrieve. This is included in the response from M:Finbourne.WebApi.Controllers.CustomEntityDefinitionController.CreateCustomEntityDefinition(Finbourne.WebApi.Interface.Dto.CustomEntityDefinitions.CustomEntityDefinitionRequest). (required)
     * @param identifierType An identifier type attached to the CustomEntity. (required)
     * @param identifierValue The identifier value. (required)
     * @param identifierScope The identifier scope. (required)
     * @param asAt The AsAt at which to retrieve the CustomEntity. (optional)
     * @return CustomEntityResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The requested Custom Entity </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> The details of the input related failure </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response </td><td>  -  </td></tr>
     </table>
     */
    public CustomEntityResponse getCustomEntity(String entityType, String identifierType, String identifierValue, String identifierScope, OffsetDateTime asAt) throws ApiException {
        ApiResponse<CustomEntityResponse> localVarResp = getCustomEntityWithHttpInfo(entityType, identifierType, identifierValue, identifierScope, asAt);
        return localVarResp.getData();
    }

    /**
     * [EXPERIMENTAL] Get CustomEntity
     * Retrieve a CustomEntity by a specific Id at a point in AsAt time.
     * @param entityType The type of entity to retrieve. This is included in the response from M:Finbourne.WebApi.Controllers.CustomEntityDefinitionController.CreateCustomEntityDefinition(Finbourne.WebApi.Interface.Dto.CustomEntityDefinitions.CustomEntityDefinitionRequest). (required)
     * @param identifierType An identifier type attached to the CustomEntity. (required)
     * @param identifierValue The identifier value. (required)
     * @param identifierScope The identifier scope. (required)
     * @param asAt The AsAt at which to retrieve the CustomEntity. (optional)
     * @return ApiResponse&lt;CustomEntityResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The requested Custom Entity </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> The details of the input related failure </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<CustomEntityResponse> getCustomEntityWithHttpInfo(String entityType, String identifierType, String identifierValue, String identifierScope, OffsetDateTime asAt) throws ApiException {
        okhttp3.Call localVarCall = getCustomEntityValidateBeforeCall(entityType, identifierType, identifierValue, identifierScope, asAt, null);
        Type localVarReturnType = new TypeToken<CustomEntityResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * [EXPERIMENTAL] Get CustomEntity (asynchronously)
     * Retrieve a CustomEntity by a specific Id at a point in AsAt time.
     * @param entityType The type of entity to retrieve. This is included in the response from M:Finbourne.WebApi.Controllers.CustomEntityDefinitionController.CreateCustomEntityDefinition(Finbourne.WebApi.Interface.Dto.CustomEntityDefinitions.CustomEntityDefinitionRequest). (required)
     * @param identifierType An identifier type attached to the CustomEntity. (required)
     * @param identifierValue The identifier value. (required)
     * @param identifierScope The identifier scope. (required)
     * @param asAt The AsAt at which to retrieve the CustomEntity. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The requested Custom Entity </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> The details of the input related failure </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getCustomEntityAsync(String entityType, String identifierType, String identifierValue, String identifierScope, OffsetDateTime asAt, final ApiCallback<CustomEntityResponse> _callback) throws ApiException {
        okhttp3.Call localVarCall = getCustomEntityValidateBeforeCall(entityType, identifierType, identifierValue, identifierScope, asAt, _callback);
        Type localVarReturnType = new TypeToken<CustomEntityResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for listCustomEntities
     * @param entityType The type of entity to list. (required)
     * @param effectiveAt The effective datetime or cut label at which to list the entities. Defaults to the current LUSID              system datetime if not specified. (optional)
     * @param asAt The asAt datetime at which to list the entities. Defaults to returning the latest version              of each portfolio if not specified. (optional)
     * @param limit When paginating, limit the results to this number. Defaults to 65,535 if not specified. (optional)
     * @param filter Expression to filter the results. For more information about filtering              results, see https://support.lusid.com/knowledgebase/article/KA-01914. (optional)
     * @param page The pagination token to use to continue listing entities; this              value is returned from the previous call. If a pagination token is provided, the filter, effectiveAt              and asAt fields must not have changed since the original request. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The requested custom entities </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> The details of the input related failure </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call listCustomEntitiesCall(String entityType, String effectiveAt, OffsetDateTime asAt, Integer limit, String filter, String page, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/customentities/{entityType}"
            .replaceAll("\\{" + "entityType" + "\\}", localVarApiClient.escapeString(entityType.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (effectiveAt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("effectiveAt", effectiveAt));
        }

        if (asAt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("asAt", asAt));
        }

        if (limit != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("limit", limit));
        }

        if (filter != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter", filter));
        }

        if (page != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("page", page));
        }

        final String[] localVarAccepts = {
            "text/plain", "application/json", "text/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);
        localVarHeaderParams.put("X-LUSID-SDK-Language", "Java");
        localVarHeaderParams.put("X-LUSID-SDK-Version", "0.11.3490");

        String[] localVarAuthNames = new String[] { "oauth2" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call listCustomEntitiesValidateBeforeCall(String entityType, String effectiveAt, OffsetDateTime asAt, Integer limit, String filter, String page, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'entityType' is set
        if (entityType == null) {
            throw new ApiException("Missing the required parameter 'entityType' when calling listCustomEntities(Async)");
        }
        

        okhttp3.Call localVarCall = listCustomEntitiesCall(entityType, effectiveAt, asAt, limit, filter, page, _callback);
        return localVarCall;

    }

    /**
     * [EXPERIMENTAL] List Custom Entities
     * List all the Custom Entities matching particular criteria.
     * @param entityType The type of entity to list. (required)
     * @param effectiveAt The effective datetime or cut label at which to list the entities. Defaults to the current LUSID              system datetime if not specified. (optional)
     * @param asAt The asAt datetime at which to list the entities. Defaults to returning the latest version              of each portfolio if not specified. (optional)
     * @param limit When paginating, limit the results to this number. Defaults to 65,535 if not specified. (optional)
     * @param filter Expression to filter the results. For more information about filtering              results, see https://support.lusid.com/knowledgebase/article/KA-01914. (optional)
     * @param page The pagination token to use to continue listing entities; this              value is returned from the previous call. If a pagination token is provided, the filter, effectiveAt              and asAt fields must not have changed since the original request. (optional)
     * @return PagedResourceListOfCustomEntityResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The requested custom entities </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> The details of the input related failure </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response </td><td>  -  </td></tr>
     </table>
     */
    public PagedResourceListOfCustomEntityResponse listCustomEntities(String entityType, String effectiveAt, OffsetDateTime asAt, Integer limit, String filter, String page) throws ApiException {
        ApiResponse<PagedResourceListOfCustomEntityResponse> localVarResp = listCustomEntitiesWithHttpInfo(entityType, effectiveAt, asAt, limit, filter, page);
        return localVarResp.getData();
    }

    /**
     * [EXPERIMENTAL] List Custom Entities
     * List all the Custom Entities matching particular criteria.
     * @param entityType The type of entity to list. (required)
     * @param effectiveAt The effective datetime or cut label at which to list the entities. Defaults to the current LUSID              system datetime if not specified. (optional)
     * @param asAt The asAt datetime at which to list the entities. Defaults to returning the latest version              of each portfolio if not specified. (optional)
     * @param limit When paginating, limit the results to this number. Defaults to 65,535 if not specified. (optional)
     * @param filter Expression to filter the results. For more information about filtering              results, see https://support.lusid.com/knowledgebase/article/KA-01914. (optional)
     * @param page The pagination token to use to continue listing entities; this              value is returned from the previous call. If a pagination token is provided, the filter, effectiveAt              and asAt fields must not have changed since the original request. (optional)
     * @return ApiResponse&lt;PagedResourceListOfCustomEntityResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The requested custom entities </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> The details of the input related failure </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<PagedResourceListOfCustomEntityResponse> listCustomEntitiesWithHttpInfo(String entityType, String effectiveAt, OffsetDateTime asAt, Integer limit, String filter, String page) throws ApiException {
        okhttp3.Call localVarCall = listCustomEntitiesValidateBeforeCall(entityType, effectiveAt, asAt, limit, filter, page, null);
        Type localVarReturnType = new TypeToken<PagedResourceListOfCustomEntityResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * [EXPERIMENTAL] List Custom Entities (asynchronously)
     * List all the Custom Entities matching particular criteria.
     * @param entityType The type of entity to list. (required)
     * @param effectiveAt The effective datetime or cut label at which to list the entities. Defaults to the current LUSID              system datetime if not specified. (optional)
     * @param asAt The asAt datetime at which to list the entities. Defaults to returning the latest version              of each portfolio if not specified. (optional)
     * @param limit When paginating, limit the results to this number. Defaults to 65,535 if not specified. (optional)
     * @param filter Expression to filter the results. For more information about filtering              results, see https://support.lusid.com/knowledgebase/article/KA-01914. (optional)
     * @param page The pagination token to use to continue listing entities; this              value is returned from the previous call. If a pagination token is provided, the filter, effectiveAt              and asAt fields must not have changed since the original request. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The requested custom entities </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> The details of the input related failure </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call listCustomEntitiesAsync(String entityType, String effectiveAt, OffsetDateTime asAt, Integer limit, String filter, String page, final ApiCallback<PagedResourceListOfCustomEntityResponse> _callback) throws ApiException {
        okhttp3.Call localVarCall = listCustomEntitiesValidateBeforeCall(entityType, effectiveAt, asAt, limit, filter, page, _callback);
        Type localVarReturnType = new TypeToken<PagedResourceListOfCustomEntityResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for upsertCustomEntity
     * @param entityType The type of the CustomEntity to be created. An entityType can be created using the M:Finbourne.WebApi.Controllers.CustomEntityDefinitionController.GetDefinition(System.String,System.Nullable{System.DateTimeOffset}) endpoint. (required)
     * @param customEntityRequest The CustomEntity to be created. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The upserted Custom Entity </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> The details of the input related failure </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call upsertCustomEntityCall(String entityType, CustomEntityRequest customEntityRequest, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = customEntityRequest;

        // create path and map variables
        String localVarPath = "/api/customentities/{entityType}"
            .replaceAll("\\{" + "entityType" + "\\}", localVarApiClient.escapeString(entityType.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "text/plain", "application/json", "text/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json-patch+json", "application/json", "text/json", "application/_*+json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);
        localVarHeaderParams.put("X-LUSID-SDK-Language", "Java");
        localVarHeaderParams.put("X-LUSID-SDK-Version", "0.11.3490");

        String[] localVarAuthNames = new String[] { "oauth2" };
        return localVarApiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call upsertCustomEntityValidateBeforeCall(String entityType, CustomEntityRequest customEntityRequest, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'entityType' is set
        if (entityType == null) {
            throw new ApiException("Missing the required parameter 'entityType' when calling upsertCustomEntity(Async)");
        }
        
        // verify the required parameter 'customEntityRequest' is set
        if (customEntityRequest == null) {
            throw new ApiException("Missing the required parameter 'customEntityRequest' when calling upsertCustomEntity(Async)");
        }
        

        okhttp3.Call localVarCall = upsertCustomEntityCall(entityType, customEntityRequest, _callback);
        return localVarCall;

    }

    /**
     * [EXPERIMENTAL] Upsert a new CustomEntity
     * Insert the custom entity if it does not exist or update the custom entity with the supplied state if it does exist.
     * @param entityType The type of the CustomEntity to be created. An entityType can be created using the M:Finbourne.WebApi.Controllers.CustomEntityDefinitionController.GetDefinition(System.String,System.Nullable{System.DateTimeOffset}) endpoint. (required)
     * @param customEntityRequest The CustomEntity to be created. (required)
     * @return CustomEntityResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The upserted Custom Entity </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> The details of the input related failure </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response </td><td>  -  </td></tr>
     </table>
     */
    public CustomEntityResponse upsertCustomEntity(String entityType, CustomEntityRequest customEntityRequest) throws ApiException {
        ApiResponse<CustomEntityResponse> localVarResp = upsertCustomEntityWithHttpInfo(entityType, customEntityRequest);
        return localVarResp.getData();
    }

    /**
     * [EXPERIMENTAL] Upsert a new CustomEntity
     * Insert the custom entity if it does not exist or update the custom entity with the supplied state if it does exist.
     * @param entityType The type of the CustomEntity to be created. An entityType can be created using the M:Finbourne.WebApi.Controllers.CustomEntityDefinitionController.GetDefinition(System.String,System.Nullable{System.DateTimeOffset}) endpoint. (required)
     * @param customEntityRequest The CustomEntity to be created. (required)
     * @return ApiResponse&lt;CustomEntityResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The upserted Custom Entity </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> The details of the input related failure </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<CustomEntityResponse> upsertCustomEntityWithHttpInfo(String entityType, CustomEntityRequest customEntityRequest) throws ApiException {
        okhttp3.Call localVarCall = upsertCustomEntityValidateBeforeCall(entityType, customEntityRequest, null);
        Type localVarReturnType = new TypeToken<CustomEntityResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * [EXPERIMENTAL] Upsert a new CustomEntity (asynchronously)
     * Insert the custom entity if it does not exist or update the custom entity with the supplied state if it does exist.
     * @param entityType The type of the CustomEntity to be created. An entityType can be created using the M:Finbourne.WebApi.Controllers.CustomEntityDefinitionController.GetDefinition(System.String,System.Nullable{System.DateTimeOffset}) endpoint. (required)
     * @param customEntityRequest The CustomEntity to be created. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The upserted Custom Entity </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> The details of the input related failure </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Error response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call upsertCustomEntityAsync(String entityType, CustomEntityRequest customEntityRequest, final ApiCallback<CustomEntityResponse> _callback) throws ApiException {
        okhttp3.Call localVarCall = upsertCustomEntityValidateBeforeCall(entityType, customEntityRequest, _callback);
        Type localVarReturnType = new TypeToken<CustomEntityResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
